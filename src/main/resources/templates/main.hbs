<!DOCTYPE html>
<html>
<head>
	<title>스프링부트 웹 서비스</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <!-- 부트스트랩 CSS -->
    <link rel="stylesheet" href="/css/lib/bootstrap.min.css">
</head>
<body>
<h1>스프링부트로 시작하는 웹 서비스</h1>

<div class="col-md-12">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#savePostsModal">글 등록</button>
    <br>
    <br>
    <!-- 목록 출력 영역 -->
    <table class="table table-horizontal table-bordered">
       <thead class="thead-strong">
           <tr>
               <th>게시글번호</th>
               <th>제목</th>
               <th>작성자</th>
               <th>최종수정일</th>
           </tr>
       </thead>
       <tbody id="tbody">
       {{#each posts}}
           <tr>
               <td>{{id}}</td>
               <td>{{title}}</td>
               <td>{{author}}</td>
               <td>{{modifiedDate}}</td>
           </tr>
       {{/each}}
       </tbody>
   </table>
</div>

<!-- Model 영역 -->
<div class="modal fade" id="savePostsModal" tabindex="-1" role="dialog" aria-labelledby="savePostsLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="savePostsLabel">게시글 등록</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="title">제목</label>
                        <input type="text" class="form-control" id="title" placeholder="제목을 입력하세요">
                    </div>
                    <div class="form-group">
                        <label for="author"> 작성자 </label>
                        <input type="text" class="form-control" id="author" placeholder="작성자를 입력하세요">
                    </div>
                    <div class="form-group">
                        <label for="content"> 내용 </label>
                        <textarea class="form-control" id="content" placeholder="내용을 입력하세요"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">취소</button>
                <button type="button" class="btn btn-primary" id="btn-save">등록</button>
            </div>
        </div>
    </div>
</div>

<pre>
	Handlebars는 서버 템플릿 엔진이다.
	JSP는 서버 템플릿 역할만 하지 않기 때문에 JSP와 완전히 똑같은 역할을 한다고 볼 순 없지만
	순수하게 JSP를 View 용으로만 사용할 때와 똑같은 역할이라고 보면 된다.
	즉, url 요청 시 파라미터와 상태에 맞춰 적절한 HTML 화면을 생성해 전달하는 역할을 한다.
	
	Handlebars는 정식 SpringBoot starter 패키지가 존재하지 않기 때문에
	대부분 사용 중인 라이브러리인 handlebars-spring-boot-starter를 사용한다.
	
	다른 서버 템플릿 스타터 패키지와 마찬가지로 Handlebars도 기본 경로는 src/main/resources/templates
	
	SpringBoot는 기본적으로 src/main/resources/static은 url에서 /로 지정된다.
	그래서 src/main/resources/static/js/..., src/main/resources/static/css/... 등은
	url로 호출 시에 도메인/js..., 도메인/css/... 로 호출할 수 있다.
	
	css는 head 안에 js는 body 태그 안에 두는 이유는 페이징 로딩 속도를 높이기 위함이다!
	HTML은 위에서부터 코드가 실행되기 때문에 head가 실행되고서야 body가 실행된다.
	즉, head가 다 불러지지 않으면 사용자 쪽에서는 백지 화면만 노출된다.
	특히 js의 용량이 클수록 body 부분의 실행이 늦어지기 때문에
	js는 body 하단에 두어 화면이 다 그려진 뒤에 호출하는 것이 좋다.
	반면 css는 화면은 그리는 역할을 하기 때문에 head에서 불러오는 것이 좋다.
</pre>

<!-- jQuery -->
<script type="text/javascript" src="/js/lib/jquery.min.js"></script>
<!-- 부트스트립 js : jQuery에 의존하기 때문에 jQuery를 먼저 호출 -->
<script type="text/javascript" src="/js/lib/bootstrap.min.js"></script>
<!-- custom js 추가 -->
<script type="text/javascript" src="/js/app/main.js"></script>
</body>
</html>